const { SlashCommandBuilder } = require('discord.js');
const { CronJob } = require('cron');

let knolvalsReminder = null;
let sittningOn = false;

module.exports = {
	data: new SlashCommandBuilder()
		.setName('sittning')
		.setDescription('Sittningläge'),
	async execute(interaction) {
		const hasAdminRole = interaction.member.roles.cache.some(role => role.name.toLowerCase() === 'admin');

		if (!hasAdminRole) {
			// If the user does not have the admin role
			interaction.reply('Din råtta du är inte admin');
			return;
		}

		if (!sittningOn) {
			// Create new cron job that ticks at minute 33,
			// sends message to specified 'general' channel by getting
			// the client from the interaction generated by sending the command.

			// Note that a new cron job is created each time sittningsläge is
			// activated.
			knolvalsReminder = CronJob.from({ cronTime: '33 * * * *',
				onTick: () => {
					interaction.client.channels.cache.get(process.env.GEN_CHANNEL_ID).send('@everyone Om 1 minut är klockan 34!');
				},
				start: true });
			sittningOn = true;

			interaction.reply('Sittningsläget **AKTIVERAT**');
		}
		else {
			// Stop the cron job ticking at minute 33 and set the variable
			// containing the job to null to hopefully make sure the job
			// is garbage collected. If memory overflow issues occur, this
			// setup could be the cause.
			knolvalsReminder.stop();
			knolvalsReminder = null;
			sittningOn = false;

			interaction.reply('Sittningsläget **AVAKTIVERAT**');
		}

	},
};